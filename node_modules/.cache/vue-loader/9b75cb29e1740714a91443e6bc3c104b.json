{"remainingRequest":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Tointoin\\code\\lc\\quizz-perso\\src\\components\\question.vue?vue&type=template&id=13c2a4f6&scoped=true&","dependencies":[{"path":"C:\\Users\\Tointoin\\code\\lc\\quizz-perso\\src\\components\\question.vue","mtime":1569333573999},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"questions\" },\n    [\n      _c(\"label\", [_vm._v(\"Question\")]),\n      _vm._l(_vm.question, function(qlang, lang) {\n        return _c(\"div\", { key: lang }, [\n          _c(\n            \"div\",\n            {\n              staticClass: \"questionHolder\",\n              class: {\n                hidden: lang !== _vm.lang0 && _vm.currentView === \"Unified\"\n              },\n              on: { click: _vm.toggle }\n            },\n            [\n              _vm.currentView === \"Translation\"\n                ? _c(\"span\", { staticClass: \"span\" }, [_vm._v(_vm._s(lang))])\n                : _vm._e(),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: qlang.question,\n                    expression: \"qlang.question\"\n                  }\n                ],\n                staticClass: \"question\",\n                attrs: { type: \"text\", placeholder: \"What to ask ?\" },\n                domProps: { value: qlang.question },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(qlang, \"question\", $event.target.value)\n                  }\n                }\n              })\n            ]\n          ),\n          _c(\n            \"div\",\n            {\n              staticClass: \"content\",\n              class: {\n                hidden: lang !== _vm.lang0 && _vm.currentView === \"Unified\"\n              }\n            },\n            [\n              _c(\n                \"div\",\n                [\n                  _c(\"label\", [_vm._v(\"Redirect to\")]),\n                  _c(\"Redirect\", {\n                    attrs: { holder: qlang, lang: lang, config: _vm.config }\n                  })\n                ],\n                1\n              ),\n              _c(\"div\", { staticClass: \"dual\" }, [\n                _c(\"div\", [\n                  _c(\"label\", [_vm._v(\"Columns\")]),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: qlang.col,\n                        expression: \"qlang.col\"\n                      }\n                    ],\n                    attrs: { type: \"number\" },\n                    domProps: { value: qlang.col },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(qlang, \"col\", $event.target.value)\n                      }\n                    }\n                  })\n                ]),\n                _c(\"div\", [\n                  _c(\"label\", [_vm._v(\"Rows\")]),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: qlang.row,\n                        expression: \"qlang.row\"\n                      }\n                    ],\n                    attrs: { type: \"number\" },\n                    domProps: { value: qlang.row },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(qlang, \"row\", $event.target.value)\n                      }\n                    }\n                  })\n                ])\n              ]),\n              _c(\"div\", { staticClass: \"clear\" }),\n              _c(\"div\", { staticClass: \"dual\" }, [\n                _c(\"div\", [\n                  _c(\"label\", [_vm._v(\"Min\")]),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: qlang.min,\n                        expression: \"qlang.min\"\n                      }\n                    ],\n                    attrs: { type: \"number\" },\n                    domProps: { value: qlang.min },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(qlang, \"min\", $event.target.value)\n                      }\n                    }\n                  })\n                ]),\n                _c(\"div\", [\n                  _c(\"label\", [_vm._v(\"Max\")]),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: qlang.max,\n                        expression: \"qlang.max\"\n                      }\n                    ],\n                    attrs: { type: \"number\" },\n                    domProps: { value: qlang.max },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(qlang, \"max\", $event.target.value)\n                      }\n                    }\n                  })\n                ])\n              ]),\n              _c(\"div\", { staticClass: \"clear\" }),\n              _c(\"Answer\", {\n                attrs: {\n                  options: qlang.options,\n                  config: _vm.config,\n                  lang: lang\n                }\n              })\n            ],\n            1\n          )\n        ])\n      })\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}