{"remainingRequest":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Tointoin\\code\\lc\\quizz-perso\\src\\components\\questions.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Tointoin\\code\\lc\\quizz-perso\\src\\components\\questions.vue","mtime":1569423289933},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Vue from 'vue'\r\nimport { Question } from '../Objects'\r\nimport QuestionComp from './question'\r\nexport default {\r\n  name: 'Questions',\r\n  props: ['config'],\r\n  data(){\r\n    return {\r\n      currentView: 'Flow',\r\n      views: ['Flow','Translation','Detail'],\r\n    }\r\n  },\r\n  components: { QuestionComp },\r\n  methods:{\r\n    changeView(ev){\r\n      this.currentView = ev.target.innerText\r\n    },\r\n    getQuestionInAllLangs(qId){\r\n      let q = {}\r\n      this.config.langs.forEach(lang =>{\r\n        if(!this.config.questions[lang]){\r\n          Vue.set(this.config.questions, lang, [new Question])\r\n        }\r\n        q[lang] = this.config.questions[lang][qId]\r\n      })\r\n      return q\r\n    },\r\n    newQuestion(){\r\n      this.config.langs.forEach(lang => {\r\n        const id = 'q' + Date.now()\r\n        Vue.set(this.config.questions[lang], this.config.questions[lang].length, new Question)\r\n        this.config.questions[lang][this.config.questions[lang].length-1].id = id\r\n      })\r\n    },\r\n    removeQuestion(idInArray){\r\n      this.config.langs.forEach(lang => {\r\n        this.config.questions[lang].splice(idInArray,1)\r\n      })\r\n    }\r\n  },\r\n  computed:{\r\n    lang0() {\r\n      if(this.config.langs[0]) return this.config.langs[0]\r\n      return ''\r\n    },\r\n  }\r\n}\r\n",{"version":3,"sources":["questions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"questions.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"views\">\r\n      <label>View</label>\r\n      <button\r\n        v-for=\"view in views\" :key=\"view\"\r\n        @click=\"changeView\"\r\n        :class=\"{ 'active' : view === currentView }\"\r\n      >{{view}}</button>\r\n      <label v-if=\"currentView === 'Flow'\"><b>{{lang0.toUpperCase()}}</b></label>\r\n    </div>\r\n\r\n    <div\r\n      class=\"container\"\r\n      v-for=\"(question, qId) in config.questions[lang0]\" :key=\"question.id\"\r\n    >\r\n      <button class=\"remove\" @click=\"removeQuestion(qId)\">Remove</button>\r\n      <QuestionComp\r\n        :currentView=\"currentView\"\r\n        :question=\"getQuestionInAllLangs(qId)\"\r\n        :lang0=\"lang0\"\r\n        :config=\"config\"\r\n        :i=\"qId+1\"\r\n      ></QuestionComp>\r\n    </div>\r\n\r\n    <div class=\"newQuestion\"\r\n      v-if=\"config.langs[0]\"\r\n    >\r\n      <button @click=\"newQuestion\">New Question</button>\r\n    </div>\r\n\r\n    <div class=\"newQuestion\" v-else><h2>Add a language to edit questions</h2></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from 'vue'\r\nimport { Question } from '../Objects'\r\nimport QuestionComp from './question'\r\nexport default {\r\n  name: 'Questions',\r\n  props: ['config'],\r\n  data(){\r\n    return {\r\n      currentView: 'Flow',\r\n      views: ['Flow','Translation','Detail'],\r\n    }\r\n  },\r\n  components: { QuestionComp },\r\n  methods:{\r\n    changeView(ev){\r\n      this.currentView = ev.target.innerText\r\n    },\r\n    getQuestionInAllLangs(qId){\r\n      let q = {}\r\n      this.config.langs.forEach(lang =>{\r\n        if(!this.config.questions[lang]){\r\n          Vue.set(this.config.questions, lang, [new Question])\r\n        }\r\n        q[lang] = this.config.questions[lang][qId]\r\n      })\r\n      return q\r\n    },\r\n    newQuestion(){\r\n      this.config.langs.forEach(lang => {\r\n        const id = 'q' + Date.now()\r\n        Vue.set(this.config.questions[lang], this.config.questions[lang].length, new Question)\r\n        this.config.questions[lang][this.config.questions[lang].length-1].id = id\r\n      })\r\n    },\r\n    removeQuestion(idInArray){\r\n      this.config.langs.forEach(lang => {\r\n        this.config.questions[lang].splice(idInArray,1)\r\n      })\r\n    }\r\n  },\r\n  computed:{\r\n    lang0() {\r\n      if(this.config.langs[0]) return this.config.langs[0]\r\n      return ''\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.hidden{\r\n  display: none;\r\n}\r\n.views{\r\n  margin: 15px auto;\r\n  text-align: center;\r\n}\r\n.newQuestion > button{\r\n  margin: 5px;\r\n  padding: 15px;\r\n  width: 300px;\r\n}\r\n.newQuestion > button:hover, .newQuestion > button:active{\r\n  background-color: #ccc;\r\n}\r\n.views > button{\r\n  margin: 5px;\r\n  padding: 10px;\r\n}\r\n.views > button:hover, .active{\r\n  background-color: #ccc;\r\n}\r\n.newQuestion{\r\n  text-align: center;\r\n}\r\n.container{\r\n  width: min-content;\r\n  margin: auto;\r\n  position: relative;\r\n}\r\n.remove{\r\n  height: calc(100% - 19px);\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  right: 0;\r\n  bottom: 0;\r\n  transform: translateX(150%);\r\n}\r\n.remove:hover{\r\n  background-color: #db3254;\r\n  color: white;\r\n}\r\n</style>"]}]}