{"remainingRequest":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Tointoin\\code\\lc\\quizz-perso\\src\\components\\questions.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Tointoin\\code\\lc\\quizz-perso\\src\\components\\questions.vue","mtime":1569247910726},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { Question } from '../Objects'\r\nimport NextQuestion from './nextQuestion'\r\nexport default {\r\n  name: 'Questions',\r\n  props: ['config'],\r\n  components: { NextQuestion },\r\n  methods:{\r\n    newQuestion(){\r\n      for(let lang in this.config.questions){\r\n        this.config.questions[lang].push(new Question)\r\n      }\r\n      this.$emit('re-expand')\r\n    },\r\n    removeQuestion(){\r\n      console.log('todo remove question')\r\n    },\r\n    sync(el, i, lg){\r\n      this.config.languages.forEach(lang => {\r\n        this.config.questions[lang][i][el] = this.config.questions[lg][i][el]\r\n        console.log(this.config.questions[lg][i][el])\r\n      })\r\n      this.config.questions\r\n    },\r\n  }\r\n}\r\n",{"version":3,"sources":["questions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"questions.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"row\">\r\n    <div>\r\n      <div\r\n        class=\"col\"\r\n        v-for=\"lang in config.languages\"\r\n        :key=\"lang\"\r\n      >\r\n\r\n        <div class=\"lang\">| {{lang.toUpperCase()}} |</div>\r\n\r\n        <div\r\n          class=\"questions\"\r\n          v-for=\"(question, i) in config.questions[lang]\"\r\n          :key=\"question.id\"\r\n        >\r\n\r\n          <div class=\"input\">\r\n            <label>Question</label>\r\n            <input type=\"text\" placeholder=\"What do you want to ask ?\"\r\n              v-model=\"config.questions[lang][i].question\"\r\n            >\r\n          </div>\r\n\r\n          <div class=\"input\">\r\n            <label>Redirecto to</label>\r\n            <NextQuestion\r\n              :config=\"config\"\r\n              :lang=\"lang\"\r\n              :that=\"config.questions[lang][i]\"\r\n              v-on:next-update=\"sync('next',i,lang)\"\r\n            ></NextQuestion>\r\n          </div>\r\n\r\n          <div class=\"input\">\r\n            <label>Collumns - Rows</label>\r\n            <div class=\"dualInput\">\r\n              <input type=\"number\" placeholder=\"Collumns\"\r\n                v-model=\"config.questions[lang][i].col\"\r\n                @input=\"sync('col',i,lang)\"\r\n              >\r\n              <input type=\"number\" placeholder=\"Rows\"\r\n                v-model=\"config.questions[lang][i].row\"\r\n                @input=\"sync('row',i,lang)\"\r\n              >\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"input\">\r\n            <label>Min - Max</label>\r\n            <div class=\"dualInput\">\r\n              <input type=\"number\" placeholder=\"Min\"\r\n                v-model=\"config.questions[lang][i].min\"\r\n                @input=\"sync('min',i,lang)\"\r\n              >\r\n              <input type=\"number\" placeholder=\"Max\"\r\n                v-model=\"config.questions[lang][i].max\"\r\n                @input=\"sync('max',i,lang)\"\r\n              >\r\n            </div>\r\n          </div>\r\n          <div class=\"removeQuestion\">\r\n            <button @click=\"removeQuestion\">Remove question</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class = \"addQuestion\">\r\n          <button @click=\"newQuestion\">New question</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Question } from '../Objects'\r\nimport NextQuestion from './nextQuestion'\r\nexport default {\r\n  name: 'Questions',\r\n  props: ['config'],\r\n  components: { NextQuestion },\r\n  methods:{\r\n    newQuestion(){\r\n      for(let lang in this.config.questions){\r\n        this.config.questions[lang].push(new Question)\r\n      }\r\n      this.$emit('re-expand')\r\n    },\r\n    removeQuestion(){\r\n      console.log('todo remove question')\r\n    },\r\n    sync(el, i, lg){\r\n      this.config.languages.forEach(lang => {\r\n        this.config.questions[lang][i][el] = this.config.questions[lg][i][el]\r\n        console.log(this.config.questions[lg][i][el])\r\n      })\r\n      this.config.questions\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.row{\r\n  overflow-x: scroll;\r\n  overflow-y: hidden;\r\n  white-space: nowrap;\r\n}\r\n.col{\r\n  display: inline-block;\r\n  width: min-content;\r\n  padding: 15px;\r\n  border-right: 1px solid #485f4d;\r\n}\r\n.lang{\r\n  width: min-content;\r\n  background-color: #ccc;\r\n  white-space: none;\r\n  padding: 5px;\r\n  margin-bottom: 10px;\r\n  margin: auto;\r\n  font-size: 30px;\r\n}\r\n.addQuestion > button{\r\n  margin-top: 10px;\r\n}\r\n.addQuestion > button, .removeQuestion > button{\r\n  width: 331px;\r\n  padding: 10px 15px;\r\n  background-color: #ccc;\r\n  border: 1px solid #ccc;\r\n}\r\n.addQuestion > button:hover, .removeQuestion > button:hover{\r\n  background-color: white;\r\n  border: 1px solid #ccc;\r\n  cursor: pointer;\r\n}\r\ninput{\r\n  width: 300px;\r\n}\r\n.input{\r\n  margin: 15px auto;\r\n}\r\n.dualInput > input{\r\n  display: inline-block;\r\n  width: 134px;\r\n}\r\n.redirect::placeholder{\r\n  color: #485f4d;\r\n}\r\n\r\n</style>"]}]}