{"remainingRequest":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Tointoin\\code\\lc\\quizz-personality\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Tointoin\\code\\lc\\quizz-personality\\src\\App.vue","mtime":1569499840528},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'App',\n  components:{},\n  data: function(){\n    return {\n      defaultLangs : ['fr','en'],\n      config: {},\n      newLang: '',\n    }\n  },\n  computed:{\n    lang0: function(){\n      if(this.config.langs)\n        return this.config.langs[0]\n      else return null\n    },\n    currentQuestionId(){\n      if(this.config.questions)\n        return this.config.questions[this.lang0].length\n      return 0\n    },\n  },\n  methods:{\n    Questionary: function(){\n      var vm = this\n      return {\n        name : '',\n        langs: vm.defaultLangs,\n        questions: vm.defaultLangs.reduce(function(acc, lang){\n          acc[lang] = [vm.Question()]; return acc\n        }, {})\n      }\n    },\n    Question: function(){\n      var vm = this\n      return {\n        id : 'q' + vm.currentQuestionId,\n        question : '', next : '',\n        max : 1, min : 1,\n        col : 2, row : 1,\n        options : [vm.Answer(), vm.Answer()],\n      }\n    },\n    Answer: function(){\n      return { src: '', tags: [], next: '' }\n    },\n    removeLang(lang){\n      this.config.langs.splice(this.config.langs.indexOf(lang), 1)\n      delete this.config.questions[lang]\n    },\n    addLangage: function(){\n      if(this.newLang.length < 2 || ~this.config.langs.indexOf(this.newLang))\n        return\n      this.config.langs.push(this.newLang)\n      this.$set(this.config.questions, this.newLang, [])\n      this.fillQuestions(this.newLang)\n    },\n    fillQuestions: function(lang){\n      var vm = this\n      this.config.questions[this.lang0].forEach(function(question, i){\n        vm.$set(vm.config.questions[lang], i, vm.Question())\n        vm.config.questions[lang][i].id = 'q' + i\n      })\n    },\n    save: function(){\n      console.log(this, 'config', this.config)\n      // console.log(JSON.stringify(this.config))\n    }\n  },\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n<div id=\"app\">\n\n  <div class=\"row max\"\n    v-if=\"Object.keys(config).length === 0\">\n    <button\n      @click=\"config = Questionary()\">\n      New Questionary</button>\n  </div>\n\n  <div v-else>\n    <div class=\"row\">\n      <h1>Main</h1>\n      <div class=\"labelInput content\">\n        <label>Name</label>\n        <input v-model=\"config.name\" placeholder=\"Name of the questionary\">\n      </div>\n    </div>\n    <div class=\"row\">\n      <h1>Languages</h1>\n      <div class=\"content langs\">\n        <div class=\"lang\"\n          v-for=\"lang in config.langs\" :key=\"lang\"\n          @click=\"removeLang(lang)\"\n          >{{lang}}</div>\n      </div>\n      <input class=\"gluedRigth tinyInput\" placeholder=\"Language\" maxlength=2\n        @keyup.enter=\"addLangage\" v-model=\"newLang\">\n      <button @clikc=\"addLangage\" class=\"gluedLeft\">Add</button>\n    </div>\n  </div>\n\n  <div class=\"row max\">\n    <button @click=\"save\">Get JSON</button>\n  </div>\n\n</div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  components:{},\n  data: function(){\n    return {\n      defaultLangs : ['fr','en'],\n      config: {},\n      newLang: '',\n    }\n  },\n  computed:{\n    lang0: function(){\n      if(this.config.langs)\n        return this.config.langs[0]\n      else return null\n    },\n    currentQuestionId(){\n      if(this.config.questions)\n        return this.config.questions[this.lang0].length\n      return 0\n    },\n  },\n  methods:{\n    Questionary: function(){\n      var vm = this\n      return {\n        name : '',\n        langs: vm.defaultLangs,\n        questions: vm.defaultLangs.reduce(function(acc, lang){\n          acc[lang] = [vm.Question()]; return acc\n        }, {})\n      }\n    },\n    Question: function(){\n      var vm = this\n      return {\n        id : 'q' + vm.currentQuestionId,\n        question : '', next : '',\n        max : 1, min : 1,\n        col : 2, row : 1,\n        options : [vm.Answer(), vm.Answer()],\n      }\n    },\n    Answer: function(){\n      return { src: '', tags: [], next: '' }\n    },\n    removeLang(lang){\n      this.config.langs.splice(this.config.langs.indexOf(lang), 1)\n      delete this.config.questions[lang]\n    },\n    addLangage: function(){\n      if(this.newLang.length < 2 || ~this.config.langs.indexOf(this.newLang))\n        return\n      this.config.langs.push(this.newLang)\n      this.$set(this.config.questions, this.newLang, [])\n      this.fillQuestions(this.newLang)\n    },\n    fillQuestions: function(lang){\n      var vm = this\n      this.config.questions[this.lang0].forEach(function(question, i){\n        vm.$set(vm.config.questions[lang], i, vm.Question())\n        vm.config.questions[lang][i].id = 'q' + i\n      })\n    },\n    save: function(){\n      console.log(this, 'config', this.config)\n      // console.log(JSON.stringify(this.config))\n    }\n  },\n}\n</script>\n\n<style>\n*{\n  margin: 0; padding: 0; outline: 0;\n  font-family: sans-serif;\n  color: #0b0c0c;\n  background-color: #f0f1f5;\n  border-style: none;\n  border-radius: 2px;\n}\n#app{\n  text-align: center;\n  width: 720px;\n  margin: auto;\n}\nlabel {\n  display: block;\n  padding-left: 10px;\n}\ninput{\n  border-radius: 2px;\n  border: 1px solid #56585c;\n  padding: 5px 10px;\n  font-size: 15px;\n  background-color: #f5fbfa; /*clearer*/\n  max-width: 100%;\n  transition-duration: 0.2s;\n}\ninput:hover, input:focus{\n  border: 1px solid #0b0c0c;\n}\nbutton{\n  font-size: 15px;\n  border: 1px solid #56585c;\n  color: #f0f1f5;\n  background-color: #56585c;\n  cursor: pointer;\n  padding: 5px 10px;\n  transition-duration: 0.2s;\n}\nbutton:hover{\n  background-color: #f0f1f5;\n  color: #0b0c0c;\n}\nh1{\n  background-color: #0b0c0c;\n  color: #f5fbfa;\n  width: 80%;\n  margin: auto;\n  font-size: 25px;\n  padding: 5px 0;\n}\n.labelInput{\n  width: min-content;\n  margin: 0 auto;\n  text-align: left;\n}\n.row{\n  margin-bottom: 15px;\n  padding: 0 10px;\n}\n.content{\n  margin-top: 15px;\n}\n.lang{\n  display: inline-block;\n  background-color: #56585c;\n  color: #f0f1f5;\n  border-radius: 2px;\n  text-transform: uppercase;\n  font-family: monospace;\n  margin: 0 5px;\n  font-size: 20px;\n  padding: 2px 7px;\n  cursor: pointer;\n}\n.lang:hover{ background-color: #db3254 }\n.lang:hover:after{\n  content: ' -';\n  font-weight: bold;\n}\n.langs{\n  margin-bottom: 10px;\n}\n.gluedRigth{\n  border-radius: 2px 0 0 2px;\n}\n.gluedLeft{\n  border-radius: 0 2px 2px 0;\n}\n.tinyInput{\n  width: 70px;\n}\n.max *{\n  width: 80%;\n}\n\n</style>"]}]}