{"remainingRequest":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Tointoin\\Documents\\code\\h-s\\components\\langs.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Tointoin\\Documents\\code\\h-s\\components\\langs.vue","mtime":1570434735972},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport iconsLangs from './icons-langs'\r\nexport default {\r\n  name: 'Langs',\r\n  props: ['langs'],\r\n  data: function(){\r\n    return {\r\n      currentLangs: []\r\n    }\r\n  },\r\n  created: function(){\r\n    this.currentLangs = this.langs.slice()\r\n  },\r\n  watch: {\r\n    currentLangs: function(){\r\n      this.$emit('update', this.currentLangs)\r\n    }\r\n  },\r\n  methods: {\r\n    getIcon: function(lang,style){\r\n      return 'url(' + iconsLangs[lang] + ')'\r\n    },\r\n    toggleTranslationMode: function(){\r\n      if(this.currentLangs.length === this.langs.length)\r\n        return this.currentLangs = [this.langs[0]]\r\n      this.currentLangs = this.langs.slice()\r\n    },\r\n    chooseLang(ev, lang){\r\n      if(ev.ctrlKey)\r\n        ~this.currentLangs.indexOf(lang) ?\r\n          this.currentLangs.splice(this.currentLangs.indexOf(lang),1) :\r\n          this.currentLangs.push(lang)\r\n      else this.currentLangs = [lang]\r\n    }\r\n  },\r\n}\r\n",{"version":3,"sources":["langs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"langs.vue","sourceRoot":"components","sourcesContent":["<template>\r\n<div id=\"hs-langsComponent\">\r\n\r\n  <div\r\n    class=\"hs-translation\"\r\n    title=\"Toggle the translation mode\"\r\n    @click=\"toggleTranslationMode()\"\r\n  >\r\n    <div\r\n      :class=\"{ 'hs-disabled': currentLangs.length !== langs.length }\"\r\n    >\r\n      <i class=\"hs-translationIcon\"></i>\r\n      <span class=\"hs-borderBottom\"></span>\r\n    </div>\r\n  </div>\r\n\r\n  <ul\r\n    class=\"hs-langs\"\r\n  >\r\n    <li\r\n      class=\"hs-langItem\"\r\n      v-for=\"lang in langs\" :key=\"lang\"\r\n      :style=\"{ backgroundImage : getIcon(lang) }\"\r\n      :class=\"{ 'hs-disabled' : !~currentLangs.indexOf(lang)}\"\r\n      @click=\"chooseLang($event,lang)\"\r\n    >\r\n      <span class=\"hs-langText\">{{lang}}</span>\r\n    </li>\r\n  </ul>\r\n\r\n</div>\r\n</template>\r\n<script>\r\nimport iconsLangs from './icons-langs'\r\nexport default {\r\n  name: 'Langs',\r\n  props: ['langs'],\r\n  data: function(){\r\n    return {\r\n      currentLangs: []\r\n    }\r\n  },\r\n  created: function(){\r\n    this.currentLangs = this.langs.slice()\r\n  },\r\n  watch: {\r\n    currentLangs: function(){\r\n      this.$emit('update', this.currentLangs)\r\n    }\r\n  },\r\n  methods: {\r\n    getIcon: function(lang,style){\r\n      return 'url(' + iconsLangs[lang] + ')'\r\n    },\r\n    toggleTranslationMode: function(){\r\n      if(this.currentLangs.length === this.langs.length)\r\n        return this.currentLangs = [this.langs[0]]\r\n      this.currentLangs = this.langs.slice()\r\n    },\r\n    chooseLang(ev, lang){\r\n      if(ev.ctrlKey)\r\n        ~this.currentLangs.indexOf(lang) ?\r\n          this.currentLangs.splice(this.currentLangs.indexOf(lang),1) :\r\n          this.currentLangs.push(lang)\r\n      else this.currentLangs = [lang]\r\n    }\r\n  },\r\n}\r\n</script>"]}]}