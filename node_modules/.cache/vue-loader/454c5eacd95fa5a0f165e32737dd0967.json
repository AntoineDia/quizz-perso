{"remainingRequest":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Tointoin\\Documents\\code\\h-s\\components\\questions.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Tointoin\\Documents\\code\\h-s\\components\\questions.vue","mtime":1571212129765},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Answers from './answers'\r\nimport Redirect from './redirect'\r\nexport default {\r\n  name: 'Questions',\r\n  props: ['questions','langs','currentLangs', 'tags', 'arrayEdit', 'lastId'],\r\n  components: { Answers, Redirect },\r\n  data() {\r\n    var arrayEdit = []\r\n    this.questions[this.langs[0]].forEach(function(a,i){\r\n      arrayEdit.push(i)\r\n    })\r\n    return {\r\n      questionBranch: [0],\r\n      editionQuestions: arrayEdit || [0],\r\n      lastQuestionId: this.lastId,\r\n      selectedQuestion: 0,\r\n    }\r\n  },\r\n  methods: {\r\n    cleanNumber(i){\r\n      return i <= 8 ? '0' + (i+1) : (i+1)\r\n    },\r\n    toggleInArray(arr, item){\r\n      ~arr.indexOf(item) ?\r\n        arr.splice(arr.indexOf(item), 1) :\r\n        arr.push(item)\r\n    },\r\n    arrInclude(arr,item){\r\n      return !!~arr.indexOf(item)\r\n    },\r\n    confirmation: function(item,id){\r\n      return confirm('Are you sure you want to delete' + item + (id + 1 ) + '?')\r\n    },\r\n    deleteQuestion(i){\r\n      this.langs.forEach(function(lang){\r\n        this.questions[lang].splice(i, 1)\r\n      }.bind(this))\r\n    },\r\n    addQuestion(){\r\n      this.questions[this.langs[0]].forEach(question => {\r\n        if(question.id === this.lastQuestionId) this.lastQuestionId++\r\n      })\r\n      this.langs.forEach(function(lang){\r\n        this.questions[lang].push({\r\n          question: '',\r\n          id: this.lastQuestionId,\r\n          cols: 2, rows: 1,\r\n          min: 1, max: 1,\r\n          next : this.lastQuestionId + 1,\r\n          answers: [\r\n            {\r\n              text: '',\r\n              next: '',\r\n              tags: [],\r\n              src: 'https://picsum.photos/200/300',\r\n            },\r\n            {\r\n              text: '',\r\n              next: '',\r\n              tags: [],\r\n              src: 'https://picsum.photos/250/300',\r\n            }\r\n          ]\r\n        })\r\n      }.bind(this), {})\r\n      this.editionQuestions.push(this.lastQuestionId)\r\n      this.selectedQuestion =  this.lastQuestionId,\r\n      this.lastQuestionId = this.lastQuestionId + 1\r\n    },\r\n    resizeArea(area){\r\n      setTimeout(function(){\r\n        var scrollHeigth = area.scrollHeight\r\n        if(scrollHeigth < 42) {\r\n          return area.style.cssText = 'height:' + 25 + 'px';\r\n        }\r\n        area.style.cssText = 'height:auto'\r\n        area.style.cssText = 'height:' + area.scrollHeight + 'px';\r\n      },0);\r\n    }\r\n  },\r\n  computed: {\r\n    lang0(){\r\n      return this.questions[this.currentLangs[0]]\r\n    }\r\n  },\r\n  watch:{\r\n    arrayEdit(){\r\n      this.editionQuestions = this.arrayEdit\r\n    },\r\n    lang0:{\r\n      deep: true,\r\n      handler(){\r\n        // console.log('watch lang0')\r\n        var propsQuestion = ['next','cols','rows','min','max']\r\n        var propsAnswer = ['next','src','tags']\r\n        this.langs.forEach(function(lang){\r\n          if(lang === this.currentLangs[0]) return\r\n          this.questions[lang].forEach(function(q,i){\r\n            propsQuestion.forEach(function(prop){\r\n              q[prop] = this.questions[this.currentLangs[0]][i][prop]\r\n            }.bind(this))\r\n          }.bind(this))\r\n        }.bind(this))\r\n\r\n        this.langs.forEach(function(lang){\r\n          if(lang === this.currentLangs[0]) return\r\n          this.questions[lang].forEach(function(q,i){\r\n            q.answers.forEach(function(answer,j){\r\n              propsAnswer.forEach(function(prop){\r\n                if(prop === 'tags'){\r\n                  // console.log('tags')\r\n                  // console.log(this.questions[this.currentLangs[0]][i].answers[j][prop])\r\n                  answer[prop] = this.questions[this.currentLangs[0]][i].answers[j][prop].slice()\r\n                }\r\n                 answer[prop] = this.questions[this.currentLangs[0]][i].answers[j][prop]\r\n              }.bind(this))\r\n            }.bind(this))\r\n          }.bind(this))\r\n        }.bind(this))\r\n      }\r\n    }\r\n  },\r\n}\r\n",{"version":3,"sources":["questions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"questions.vue","sourceRoot":"components","sourcesContent":["<template>\r\n<div>\r\n\r\n<div class=\"hs-questionNumber\">\r\n  <div v-for=\"(question, i) in questions[langs[0]]\" :key=\"(question.id) + (i)\"\r\n    :class=\"{'hs-selected' : i === selectedQuestion}\"\r\n    @click=\"selectedQuestion = i\"\r\n    class=\"hs-headNumber\"\r\n    >{{cleanNumber(i)}}</div>\r\n  <div class=\"hs-new\"\r\n    @click=\"addQuestion()\"\r\n  >+</div>\r\n</div>\r\n\r\n<div\r\n  class=\"hs-questions\"\r\n  v-for=\"(question, i) in questions[currentLangs[0]]\" :key=\"(question.id) + (i)\"\r\n  :class=\"{'hs-hiddenInSight' : selectedQuestion !== i }\"\r\n>\r\n\r\n  <div class=\"hs-questionRow\">\r\n\r\n    <div class=\"hs-questionBody\">\r\n\r\n      <div class=\"hs-labelInput\">\r\n        <div class=\"hs-headNumber\">\r\n        <div :class=\"{ 'hs-disabled' : !arrInclude(editionQuestions, i)}\">\r\n          <span>{{ cleanNumber(i) }}</span>\r\n          <span class=\"hs-borderBottom\"></span>\r\n        </div>\r\n      </div>\r\n      <span>\r\n        Question\r\n      </span>\r\n      </div>\r\n\r\n      <div class=\"hs-textInputHolder\">\r\n        <div\r\n          class=\"hs-inputRow\"\r\n          v-for=\"lang in currentLangs\" :key=\"lang\"\r\n        >\r\n          <label>{{lang}}</label>\r\n          <textarea\r\n            row=\"1\"\r\n            v-model=\"questions[lang][i].question\"\r\n            class=\"hs-inputRowInput\"\r\n            @input=\"resizeArea($event.target)\"\r\n            @click=\"resizeArea($event.target)\"\r\n            spellcheck=\"false\"\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"hs-questionParams\">\r\n\r\n        <label class=\"hs-labelInput hs-redirectLabel\"\r\n          v-if=\"arrInclude(questionBranch, i) || arrInclude(editionQuestions,i)\"\r\n        >Auto redirect</label>\r\n        <div style=\"position:relative\"\r\n          v-if=\"arrInclude(questionBranch, i) || arrInclude(editionQuestions,i)\"\r\n        >\r\n          <div class=\"hs-inputRow hs-redirect\">\r\n            <Redirect\r\n              class=\"hs-redirect\"\r\n              :holder=\"question\"\r\n              :lang=\"currentLangs[0]\"\r\n              :qId=\"i\"\r\n              :questions=\"questions\"\r\n              :langs=\"langs\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"hs-dual\"\r\n          v-if=\"arrInclude(editionQuestions,i)\"\r\n        >\r\n          <div>\r\n            <label class=\"hs-labelInput\">Choices</label>\r\n            <div class=\"hs-inputRow\">\r\n              <label>min</label>\r\n              <input type=\"number\"\r\n                v-model=\"question.min\"\r\n              >\r\n            </div>\r\n            <div class=\"hs-inputRow\">\r\n              <label>max</label>\r\n              <input type=\"number\"\r\n                v-model=\"question.max\"\r\n              >\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label class=\"hs-labelInput\">Disposition</label>\r\n            <div class=\"hs-inputRow\">\r\n              <label>rows</label>\r\n              <input type=\"number\"\r\n                v-model=\"question.rows\"\r\n              >\r\n            </div>\r\n            <div class=\"hs-inputRow\">\r\n              <label>cols</label>\r\n              <input type=\"number\"\r\n                v-model=\"question.cols\"\r\n              >\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"hs-edition\">\r\n        <div class=\"hs-editIcon\"\r\n          @click=\"[\r\n            toggleInArray(editionQuestions,i),\r\n            arrInclude(questionBranch,i) &&\r\n            arrInclude(editionQuestions,i) ? '' :\r\n            toggleInArray(questionBranch,i)\r\n          ]\"\r\n        ><span\r\n         :class=\"{ 'hs-disabled' : !arrInclude(editionQuestions, i)  }\"\r\n        ></span>\r\n          <span class=\"hs-borderBottom\"\r\n            :class=\"{ 'hs-disabled' : !arrInclude(editionQuestions, i)  }\"\r\n          ></span>\r\n        </div>\r\n        <i class=\"hs-deleteIcon\"\r\n          @click=\"confirmation(' question ',i) ? deleteQuestion(i) : ''\"\r\n        ></i>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <Answers\r\n    class=\"hs-answerComponent\"\r\n    :i='i'\r\n    :questions='questions'\r\n    :answers='question.answers'\r\n    :langs='langs'\r\n    :currentLangs='currentLangs'\r\n    :tags=\"tags\"\r\n  />\r\n</div>\r\n\r\n</div>\r\n</template>\r\n<script>\r\nimport Answers from './answers'\r\nimport Redirect from './redirect'\r\nexport default {\r\n  name: 'Questions',\r\n  props: ['questions','langs','currentLangs', 'tags', 'arrayEdit', 'lastId'],\r\n  components: { Answers, Redirect },\r\n  data() {\r\n    var arrayEdit = []\r\n    this.questions[this.langs[0]].forEach(function(a,i){\r\n      arrayEdit.push(i)\r\n    })\r\n    return {\r\n      questionBranch: [0],\r\n      editionQuestions: arrayEdit || [0],\r\n      lastQuestionId: this.lastId,\r\n      selectedQuestion: 0,\r\n    }\r\n  },\r\n  methods: {\r\n    cleanNumber(i){\r\n      return i <= 8 ? '0' + (i+1) : (i+1)\r\n    },\r\n    toggleInArray(arr, item){\r\n      ~arr.indexOf(item) ?\r\n        arr.splice(arr.indexOf(item), 1) :\r\n        arr.push(item)\r\n    },\r\n    arrInclude(arr,item){\r\n      return !!~arr.indexOf(item)\r\n    },\r\n    confirmation: function(item,id){\r\n      return confirm('Are you sure you want to delete' + item + (id + 1 ) + '?')\r\n    },\r\n    deleteQuestion(i){\r\n      this.langs.forEach(function(lang){\r\n        this.questions[lang].splice(i, 1)\r\n      }.bind(this))\r\n    },\r\n    addQuestion(){\r\n      this.questions[this.langs[0]].forEach(question => {\r\n        if(question.id === this.lastQuestionId) this.lastQuestionId++\r\n      })\r\n      this.langs.forEach(function(lang){\r\n        this.questions[lang].push({\r\n          question: '',\r\n          id: this.lastQuestionId,\r\n          cols: 2, rows: 1,\r\n          min: 1, max: 1,\r\n          next : this.lastQuestionId + 1,\r\n          answers: [\r\n            {\r\n              text: '',\r\n              next: '',\r\n              tags: [],\r\n              src: 'https://picsum.photos/200/300',\r\n            },\r\n            {\r\n              text: '',\r\n              next: '',\r\n              tags: [],\r\n              src: 'https://picsum.photos/250/300',\r\n            }\r\n          ]\r\n        })\r\n      }.bind(this), {})\r\n      this.editionQuestions.push(this.lastQuestionId)\r\n      this.selectedQuestion =  this.lastQuestionId,\r\n      this.lastQuestionId = this.lastQuestionId + 1\r\n    },\r\n    resizeArea(area){\r\n      setTimeout(function(){\r\n        var scrollHeigth = area.scrollHeight\r\n        if(scrollHeigth < 42) {\r\n          return area.style.cssText = 'height:' + 25 + 'px';\r\n        }\r\n        area.style.cssText = 'height:auto'\r\n        area.style.cssText = 'height:' + area.scrollHeight + 'px';\r\n      },0);\r\n    }\r\n  },\r\n  computed: {\r\n    lang0(){\r\n      return this.questions[this.currentLangs[0]]\r\n    }\r\n  },\r\n  watch:{\r\n    arrayEdit(){\r\n      this.editionQuestions = this.arrayEdit\r\n    },\r\n    lang0:{\r\n      deep: true,\r\n      handler(){\r\n        // console.log('watch lang0')\r\n        var propsQuestion = ['next','cols','rows','min','max']\r\n        var propsAnswer = ['next','src','tags']\r\n        this.langs.forEach(function(lang){\r\n          if(lang === this.currentLangs[0]) return\r\n          this.questions[lang].forEach(function(q,i){\r\n            propsQuestion.forEach(function(prop){\r\n              q[prop] = this.questions[this.currentLangs[0]][i][prop]\r\n            }.bind(this))\r\n          }.bind(this))\r\n        }.bind(this))\r\n\r\n        this.langs.forEach(function(lang){\r\n          if(lang === this.currentLangs[0]) return\r\n          this.questions[lang].forEach(function(q,i){\r\n            q.answers.forEach(function(answer,j){\r\n              propsAnswer.forEach(function(prop){\r\n                if(prop === 'tags'){\r\n                  // console.log('tags')\r\n                  // console.log(this.questions[this.currentLangs[0]][i].answers[j][prop])\r\n                  answer[prop] = this.questions[this.currentLangs[0]][i].answers[j][prop].slice()\r\n                }\r\n                 answer[prop] = this.questions[this.currentLangs[0]][i].answers[j][prop]\r\n              }.bind(this))\r\n            }.bind(this))\r\n          }.bind(this))\r\n        }.bind(this))\r\n      }\r\n    }\r\n  },\r\n}\r\n</script>"]}]}