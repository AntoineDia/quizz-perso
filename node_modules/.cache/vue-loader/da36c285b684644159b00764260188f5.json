{"remainingRequest":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Tointoin\\code\\lc\\quizz-personality\\src\\components\\redirect.vue?vue&type=style&index=0&id=56b275ec&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Tointoin\\code\\lc\\quizz-personality\\src\\components\\redirect.vue","mtime":1569934324667},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.redirectInput{\r\n  font-size: 15px;\r\n  padding: 10px 15px;\r\n  width: 100%;\r\n  border: 1px solid #56585c;\r\n  background-color: #f5fbfa;\r\n  cursor: pointer;\r\n}\r\n.redirectInput:hover{\r\n  border: 1px solid #0b0c0c;\r\n}\r\n.holderRedirect{\r\n  position: relative;\r\n  widows: 100%;\r\n}\r\n.selector:hover{\r\n  border: 1px solid #0b0c0c;\r\n}\r\n.selector{\r\n  background-color: #f5fbfa;\r\n  border: 1px solid #56585c;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  user-select: none;\r\n}\r\n.selector:after{\r\n  content: '\\25B6';\r\n  float: right;\r\n}\r\n.optionsHolder{\r\n  display: none;\r\n}\r\n.options{\r\n  background-color: #f5fbfa;\r\n  width: calc(100% - 22px);\r\n  border: 1px solid #56585c;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  border-top: 0;\r\n}\r\n.options:not(:last-child){\r\n  border-radius: 0;\r\n}\r\n.options:hover{\r\n  background-color: #eee;\r\n}\r\n/*\r\n.active:hover{\r\n  border: 1px solid #ccc;\r\n  background-color: #eee;\r\n} */\r\n.active:after{\r\n  content: \"\\25BC\";\r\n}\r\n.finish{\r\n  border-bottom: 1px solid #db3254;\r\n  border-radius: 0 0 2px 2px;\r\n}\r\n",{"version":3,"sources":["redirect.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"redirect.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <div class=\"holderRedirect\">\r\n\r\n        <p class=\"selector\"\r\n          @click=\"toggleList\"\r\n        >{{selectedBind}}</p>\r\n\r\n        <div class=\"optionsHolder\">\r\n          <p class=\"options\"\r\n            v-for = \"(question, i) in questionsChoice\" :key = \"question.id + i\"\r\n            :value=\"question.id\"\r\n            @click=\"updateNext($event, question)\"\r\n          >{{question.question}}</p>\r\n          <p\r\n            class=\"options finish\"\r\n            @click=\"updateNext($event, -1)\"\r\n          >Finish</p>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Redirect',\r\n  props: ['holder','lang','config','qId','optId','qIdInArray'],\r\n  data(){\r\n    return {\r\n      next: false,\r\n      selected: 'Next question (default)',\r\n      id: '',\r\n    }\r\n  },\r\n  methods:{\r\n    slide(i){\r\n      return 'translateY('+ i * 100 +'%)'\r\n    },\r\n    toggleList(event){\r\n      event.target.classList.toggle('active')\r\n      const options = event.target.nextElementSibling\r\n      if(options.style.display === 'block') options.style.display = 'none'\r\n      else options.style.display = 'block'\r\n    },\r\n    updateAll(){\r\n      if(!this.optId){\r\n        var idArray = this.$parent.questions[this.lang].findIndex(function(q){\r\n          return q.id === this.holder.id\r\n        }.bind(this))\r\n        this.$parent.updateProp('question','next',idArray)\r\n      }else{\r\n        this.$parent.updateProp(this.qIdInArray, 'next', this.optId)\r\n      }\r\n    },\r\n    updateNext(event, value){\r\n      const $selector = event.target.parentElement.parentElement.querySelector('.selector')\r\n      if(value !== -1){\r\n        this.id = value.id\r\n        this.holder.next = value.id\r\n      }\r\n      else{\r\n        this.id = -1\r\n        this.holder.next = -1\r\n      }\r\n      this.updateAll()\r\n      $selector.dispatchEvent(new Event('click'))\r\n    },\r\n  },\r\n  watch:{\r\n    holder:{\r\n      deep: true,\r\n      handler(){\r\n        this.id = this.holder.next\r\n      }\r\n    }\r\n  },\r\n  computed:{\r\n    questionsChoice(){\r\n      var vm = this\r\n      const questions = []\r\n      this.config.questions[this.lang].forEach((q,i) => {\r\n        if(q.id === this.qId) return this.next = true\r\n        let qTemp = {}\r\n        if(this.next) {\r\n          if(this.id === '') {\r\n            this.id = q.id\r\n          }\r\n          qTemp = {\r\n            id: q.id,\r\n            question: 'Next Question: ' + (q.question || 'Question ' + (i+1))\r\n          }\r\n        }\r\n        else qTemp = {\r\n          id: q.id,\r\n          question: 'Question '+ (i+1)+ ' ' +q.question\r\n        }\r\n        questions.push(qTemp)\r\n        this.next = false\r\n      })\r\n      this.next = false\r\n      var exist = false\r\n      questions.forEach(function(q){\r\n        if(this.id === q.id) exist = true\r\n      }.bind(this))\r\n      if(!exist && this.id !== -1) this.id =''\r\n      vm.holder.next = this.id\r\n      if(this.id !== '') this.updateAll()\r\n      return questions\r\n    },\r\n    selectedBind(){\r\n      if(this.id === -1) return 'Finish'\r\n      if(this.id === ''){\r\n        return 'Next question (default)'\r\n      }\r\n      let q = this.questionsChoice.find(el => {\r\n        return (el.id === this.id)\r\n      })\r\n      if(!q) return this.selected\r\n      if(!q.question) return 'Question nÂ°' + q.id + ' (no question text yet)'\r\n      return q.question\r\n    },\r\n  },\r\n}\r\n</script>\r\n<style scoped>\r\n.redirectInput{\r\n  font-size: 15px;\r\n  padding: 10px 15px;\r\n  width: 100%;\r\n  border: 1px solid #56585c;\r\n  background-color: #f5fbfa;\r\n  cursor: pointer;\r\n}\r\n.redirectInput:hover{\r\n  border: 1px solid #0b0c0c;\r\n}\r\n.holderRedirect{\r\n  position: relative;\r\n  widows: 100%;\r\n}\r\n.selector:hover{\r\n  border: 1px solid #0b0c0c;\r\n}\r\n.selector{\r\n  background-color: #f5fbfa;\r\n  border: 1px solid #56585c;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  user-select: none;\r\n}\r\n.selector:after{\r\n  content: '\\25B6';\r\n  float: right;\r\n}\r\n.optionsHolder{\r\n  display: none;\r\n}\r\n.options{\r\n  background-color: #f5fbfa;\r\n  width: calc(100% - 22px);\r\n  border: 1px solid #56585c;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  border-top: 0;\r\n}\r\n.options:not(:last-child){\r\n  border-radius: 0;\r\n}\r\n.options:hover{\r\n  background-color: #eee;\r\n}\r\n/*\r\n.active:hover{\r\n  border: 1px solid #ccc;\r\n  background-color: #eee;\r\n} */\r\n.active:after{\r\n  content: \"\\25BC\";\r\n}\r\n.finish{\r\n  border-bottom: 1px solid #db3254;\r\n  border-radius: 0 0 2px 2px;\r\n}\r\n</style>"]}]}