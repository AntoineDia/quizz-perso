{"remainingRequest":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Tointoin\\code\\lc\\quizz-perso\\src\\components\\collapsible.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Tointoin\\code\\lc\\quizz-perso\\src\\components\\collapsible.vue","mtime":1569245074942},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Program Files\\nodejs\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Main from './main'\r\nimport Langues from './langues'\r\nimport Questions from './questions'\r\n\r\nexport default {\r\n  name: 'Collapsible',\r\n  props: ['name','childComponent','config'],\r\n  components:{\r\n    Main, Langues, Questions\r\n  },\r\n  methods:{\r\n    toggle(event){\r\n      console.log('event in collapsibel', this.config)\r\n      event.target.classList.toggle(\"active\")\r\n      const content = event.target.nextElementSibling\r\n      if (content.style.maxHeight)\r\n        content.style = null\r\n      else\r\n        content.style.maxHeight = 'max-content'\r\n    },\r\n    syncQuestions(origin){\r\n      console.log(origin)\r\n    }\r\n  },\r\n}\r\n",{"version":3,"sources":["collapsible.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"collapsible.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <button\r\n      class=\"collapsible\"\r\n      @click=\"toggle\"\r\n    >{{name}}</button>\r\n    <p class=\"content\">\r\n      <component\r\n        class=\"child\"\r\n        :is=\"childComponent\"\r\n        :config=\"config\"\r\n        v-on:question-update=\"syncQuestions\"\r\n      ></component>\r\n    </p>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Main from './main'\r\nimport Langues from './langues'\r\nimport Questions from './questions'\r\n\r\nexport default {\r\n  name: 'Collapsible',\r\n  props: ['name','childComponent','config'],\r\n  components:{\r\n    Main, Langues, Questions\r\n  },\r\n  methods:{\r\n    toggle(event){\r\n      console.log('event in collapsibel', this.config)\r\n      event.target.classList.toggle(\"active\")\r\n      const content = event.target.nextElementSibling\r\n      if (content.style.maxHeight)\r\n        content.style = null\r\n      else\r\n        content.style.maxHeight = 'max-content'\r\n    },\r\n    syncQuestions(origin){\r\n      console.log(origin)\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.collapsible {\r\n  background-color: #eee;\r\n  color: #444;\r\n  cursor: pointer;\r\n  padding: 18px;\r\n  width: 100%;\r\n  border: none;\r\n  text-align: left;\r\n  outline: none;\r\n  font-size: 15px;\r\n}\r\n\r\n.active, .collapsible:hover {\r\n  background-color: #ccc;\r\n}\r\n\r\n.collapsible:after {\r\n  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\r\n  font-size: 13px;\r\n  color: white;\r\n  float: right;\r\n  margin-left: 5px;\r\n}\r\n.active:after {\r\n  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\r\n}\r\n\r\n.content {\r\n  max-height: 0;\r\n  overflow: hidden;\r\n  transition: 0.2s ease-out;\r\n  background-color: #fbfbfb;\r\n}\r\n\r\n.child{\r\n  margin: 15px auto;\r\n}\r\n\r\n</style>"]}]}